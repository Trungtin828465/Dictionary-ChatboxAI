.container {
  display: flex;
  height: 100vh;
  font-family: "Nunito", sans-serif;
  background-color: #f0f2f5; // Light background
}

.mainContent {
  flex: 1;
  background-color: #fff;
  margin: 20px;
  padding: 30px;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
}

.questionNav {
  display: flex;
  justify-content: space-between; // Distribute items
  padding-bottom: 15px; // Space below the nav
  margin-bottom: 25px; // Space before directions/question
  border-bottom: 1px solid #e0e0e0; // Thin separator line
  font-size: 1em; // Standard font size
  color: #888; // Lighter color for non-current, as seen in image

  span {
    padding: 0 10px; // Padding for each question number
  }

  .currentQuestionNav {
    font-weight: bold;
    color: #333; // Darker, bold for current, as seen in image
  }
}

.directions {
  font-size: 1em;
  margin-bottom: 25px; /* Adjust spacing as per image */
  color: #333;
  font-weight: normal; /* Ensure it's not bold by default unless specified */
}

.questionContainer {
  flex-grow: 1;
  margin-bottom: 30px;
}

.audioPlayer {
  width: 100%;
  margin-bottom: 20px;
}

.questionText {
  font-size: 1.2em;
  margin-bottom: 20px;
  line-height: 1.5;
  color: #222;
  display: flex; /* Aligns text and input */
  align-items: center; /* Vertically align */
  flex-wrap: wrap; /* Allows text to wrap */

  strong {
    margin-right: 5px; /* Space after "Question 1:" */
  }

  .blankInput {
    border: 1px solid #ccc;
    border-radius: 4px;
    padding: 6px 10px;
    font-size: 1em;
    width: 150px; /* Fixed width for the blank as per image */
    margin: 0 5px; /* Space around the input */
    outline: none; /* Remove outline on focus */
    &:focus {
      border-color: #007bff;
    }
  }
}

.optionItem {
  margin-bottom: 12px; /* Consistent spacing between options */
}

.optionLabel {
  display: flex;
  align-items: center;
  font-size: 1em; /* Standard font size for options */
  cursor: pointer;
  padding: 15px 20px; /* Padding inside the option box */
  border: 1px solid #ddd;
  border-radius: 5px;
  transition:
    background-color 0.2s ease,
    border-color 0.2s ease,
    color 0.2s ease;
  background-color: #fcfcfc; /* Default background for unselected */
  color: #333; /* Default text color */
  position: relative; // Quan trọng: thiết lập position để pseudo-elements có thể định vị
  padding-left: 55px; // Tăng padding-left để tạo không gian cho radio tùy chỉnh

  &:hover {
    background-color: #f5f5f5; /* Hover effect for unselected options */
  }

  &.selectedOption {
    background-color: #31e3a5; /* Green color for selected option */
    color: #37474f; /* Dark text color for selected option */
    border-color: #31e3a5; /* Border matches background */
  }

  &.selectedOption:hover {
    background-color: #31e3a5; /* No change on hover if already selected */
    color: #37474f; /* No change on hover if already selected */
  }

  // Ẩn input radio gốc
  input[type="radio"] {
    position: absolute; // Đặt input ra ngoài luồng
    opacity: 0; // Ẩn hoàn toàn nhưng vẫn có thể truy cập bằng trình đọc màn hình
    width: 0;
    height: 0;
    pointer-events: none; // Đảm bảo không tương tác với input ẩn
  }

  // Tạo kiểu cho vòng tròn ngoài của radio tùy chỉnh bằng pseudo-element ::before
  &::before {
    content: "";
    position: absolute;
    left: 20px; // Vị trí của vòng tròn ngoài
    top: 50%;
    transform: translateY(-50%);
    width: 22px; // Kích thước vòng tròn ngoài
    height: 22px;
    border: 2px solid #ccc; // Màu border mặc định
    border-radius: 50%; // Biến thành hình tròn
    background-color: #fff;
    box-sizing: border-box; // Để padding và border không làm tăng kích thước tổng thể
    transition: all 0.2s ease;
  }

  // Tạo kiểu cho chấm tròn bên trong của radio tùy chỉnh bằng pseudo-element ::after
  &::after {
    content: "";
    position: absolute;
    left: 26px; // Vị trí của chấm tròn bên trong (20px left + 2px border + 4px offset)
    top: 50%;
    transform: translateY(-50%);
    width: 10px; // Kích thước chấm tròn bên trong
    height: 10px;
    border-radius: 50%;
    background-color: #007bff; // Màu xanh của chấm tròn mặc định
    opacity: 0; // Ẩn mặc định
    transition: opacity 0.2s ease;
  }

  // Trạng thái khi radio gốc được chọn: vòng tròn ngoài
  input[type="radio"]:checked ~ .optionLetter ~ &::before {
    /* Sử dụng ~ để chọn sibling bất kể vị trí */
    border-color: #007bff; // Màu border của vòng tròn ngoài khi được chọn
  }

  // Trạng thái khi radio gốc được chọn: chấm tròn bên trong
  input[type="radio"]:checked ~ .optionLetter ~ &::after {
    /* Sử dụng ~ để chọn sibling bất kể vị trí */
    opacity: 1; // Hiển thị chấm tròn khi được chọn
  }

  // Cập nhật màu sắc cho radio tùy chỉnh khi .optionLabel có class .selectedOption (được chọn)
  &.selectedOption::before {
    border-color: #31e3a5; // Border của vòng tròn ngoài trùng với màu nền của tùy chọn được chọn
    background-color: #31e3a5; // Màu nền của vòng tròn ngoài trùng với màu nền của tùy chọn được chọn
  }

  &.selectedOption::after {
    background-color: #37474f; // Chấm tròn bên trong có màu `#37474F` khi tùy chọn được chọn
    opacity: 1; // Đảm bảo chấm tròn hiển thị khi được chọn
  }
}

.optionInput {
  // Các thuộc tính của input radio gốc đã được di chuyển và ẩn trong .optionLabel
  // Giữ trống hoặc xóa đi nếu không cần thiết
}

.optionLetter {
  font-weight: bold;
  margin-right: 10px;
  z-index: 1; // Đảm bảo chữ cái nằm trên pseudo-elements nếu cần
}

.navigationRow {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 20px;
  border-top: 1px solid #eee;
}

.markButton {
  background-color: #f0f0f0;
  color: #333;
  border: 1px solid #ccc;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1em;
  transition:
    background-color 0.3s ease,
    border-color 0.3s ease;

  &:hover {
    background-color: #e0e0e0;
  }

  &.marked {
    background-color: #6c757d; // Dark grey for marked button
    color: #fff;
    border-color: #6c757d;
  }
}

.navButton {
  background-color: #007bff;
  color: white;
  border: none;
  padding: 10px 25px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1em;
  transition: background-color 0.3s ease;

  &:disabled {
    background-color: #a0c9f1;
    cursor: not-allowed;
  }

  &:hover:not(:disabled) {
    background-color: #0056b3;
  }
}

/* Sidebar styles - significant adjustments for appearance */
.sidebar {
  width: 300px;
  background-color: #fff;
  margin: 20px; /* Consistent margin around the sidebar */
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  align-items: center;
}

.timerContainer {
  width: 100%;
  text-align: center;
  margin-bottom: 30px;
  padding-bottom: 20px;
  border-bottom: 1px dashed #e0e0e0; /* Dotted line separator as per image */
}

.timerTitle {
  font-size: 1.2em;
  color: #333;
  margin-bottom: 15px;
}

.timerDisplay {
  display: flex;
  justify-content: center;
  align-items: baseline;
  gap: 5px;

  .timeUnit {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .timeValue {
    font-size: 2.5em;
    font-weight: bold;
    color: #333;
  }

  .timeLabel {
    font-size: 0.8em;
    color: #777;
  }
}

.answerGridTitle {
  font-size: 1.2em;
  color: #333;
  margin-bottom: 15px;
  align-self: flex-start;
}

.answerGrid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 10px;
  width: 100%;
  margin-bottom: 30px;
}

.gridButton {
  width: 45px;
  height: 45px;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 5px;
  font-size: 1em;
  cursor: pointer;
  border: 1px solid #ddd; /* Default border for uncompleted */
  background-color: #f0f0f0; /* Default background for uncompleted */
  color: #333;
  transition:
    background-color 0.2s ease,
    border-color 0.2s ease,
    color 0.2s ease;

  &:hover {
    background-color: #e0e0e0;
  }

  &.answered {
    background-color: #28a745; /* Green for answered questions, matches legend */
    color: white;
    border-color: #28a745;
  }

  &.marked {
    background-color: #6c757d; /* Dark grey for marked questions, matches legend */
    color: white;
    border-color: #6c757d;
  }

  &.current {
    border: 2px solid #007bff; /* Blue border for current question */
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
  }
}

.statusLegend {
  width: 100%;
  margin-top: 20px;
  margin-bottom: 30px;
  padding-top: 20px;
  border-top: 1px solid #eee;
}

.legendItem {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
  font-size: 0.95em;
  color: #555;
}

.legendColor {
  width: 20px;
  height: 20px;
  border-radius: 4px;
  margin-right: 10px;
  border: 1px solid #ddd;
}

.legendColor.completed {
  background-color: #28a745;
  border-color: #28a745;
}

.legendColor.marked {
  background-color: #6c757d;
  border-color: #6c757d;
}

.legendColor.uncompleted {
  background-color: #f0f0f0;
  border-color: #ddd;
}

.footerButtons {
  display: flex;
  gap: 15px;
  margin-top: auto;
  width: 100%;
  justify-content: center;
  padding-top: 20px;
  border-top: 1px solid #eee;
}

.exitButton {
  background-color: #dc3545; // Red
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1em;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: #c82333;
  }
}

.submitButton {
  background-color: #28a745; // Green
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1em;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: #218838;
  }
}
